#!/bin/bash
set -euo pipefail

# Fix GitHub Pages setup for Fennel Helm Repository
echo "üîß Fixing GitHub Pages setup for Fennel Helm Repository"

# Colors for output
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
NC='\033[0m' # No Color

log() {
    echo -e "${GREEN}[INFO]${NC} $1"
}

warn() {
    echo -e "${YELLOW}[WARN]${NC} $1"
}

error() {
    echo -e "${RED}[ERROR]${NC} $1"
}

# Check if we're in the right directory
if [ ! -f "Cargo.toml" ] || [ ! -d "Charts/fennel-node" ]; then
    error "Please run this script from the fennel-solonet root directory"
    exit 1
fi

# Check if we have git credentials
if ! git config user.name > /dev/null || ! git config user.email > /dev/null; then
    error "Git user.name and user.email must be configured"
    echo "Run: git config user.name 'Your Name'"
    echo "Run: git config user.email 'your.email@example.com'"
    exit 1
fi

log "Starting GitHub Pages cleanup and setup..."

# Function to cleanup broken gh-pages branch
cleanup_gh_pages() {
    log "Cleaning up broken gh-pages branch..."
    
    # Delete local gh-pages branch if it exists
    if git show-ref --verify --quiet refs/heads/gh-pages; then
        warn "Deleting local gh-pages branch..."
        git branch -D gh-pages 2>/dev/null || true
    fi
    
    # Delete remote gh-pages branch
    if git ls-remote --heads origin | grep -q refs/heads/gh-pages; then
        warn "Deleting remote gh-pages branch..."
        git push origin --delete gh-pages 2>/dev/null || true
    fi
    
    log "Cleanup completed"
}

# Function to create proper gh-pages branch
create_gh_pages() {
    log "Creating proper gh-pages branch for Helm repository..."
    
    # Ensure we have a clean working directory
    if [ -n "$(git status --porcelain)" ]; then
        error "Working directory is not clean. Please commit or stash your changes."
        exit 1
    fi
    
    # Store current branch
    CURRENT_BRANCH=$(git branch --show-current)
    log "Current branch: $CURRENT_BRANCH"
    
    # Create temporary directory for gh-pages content
    TEMP_DIR=$(mktemp -d)
    log "Working in temporary directory: $TEMP_DIR"
    
    # Check if Helm chart exists
    if [ ! -f "Charts/fennel-node/Chart.yaml" ]; then
        error "Helm chart not found at Charts/fennel-node/Chart.yaml"
        exit 1
    fi
    
    # Get chart version
    CHART_VERSION=$(grep '^version:' Charts/fennel-node/Chart.yaml | awk '{print $2}')
    log "Chart version: $CHART_VERSION"
    
    # Package the chart
    log "Packaging Helm chart..."
    mkdir -p release
    helm package Charts/fennel-node --destination release
    
    # Initialize git in temp directory
    cd "$TEMP_DIR"
    git init
    git config user.name "$(git config user.name)"
    git config user.email "$(git config user.email)"
    
    # Create gh-pages content
    mkdir -p charts
    
    # Copy packaged chart
    cp "${GITHUB_WORKSPACE:-$(dirname "$TEMP_DIR")}"/release/*.tgz charts/ 2>/dev/null || {
        # Fallback to current directory
        cp "$(dirname "$TEMP_DIR")"/release/*.tgz charts/
    }
    
    # Generate Helm repository index
    helm repo index charts --url "https://corruptedaesthetic.github.io/fennel-solonet/charts"
    
    # Create index.html
    cat > index.html << 'EOF'
<!DOCTYPE html>
<html>
<head>
    <title>Fennel Node Helm Repository</title>
    <style>
        body { font-family: Arial, sans-serif; margin: 40px; }
        .header { color: #2c3e50; }
        .code { background-color: #f4f4f4; padding: 10px; border-radius: 5px; }
        .chart-list { margin-top: 20px; }
    </style>
</head>
<body>
    <h1 class="header">üåø Fennel Node Helm Repository</h1>
    <p>This repository contains Helm charts for the Fennel blockchain node.</p>
    
    <h2>Usage</h2>
    <div class="code">
        <strong>Add this repository:</strong><br>
        <code>helm repo add fennel https://corruptedaesthetic.github.io/fennel-solonet</code><br><br>
        
        <strong>Update repositories:</strong><br>
        <code>helm repo update</code><br><br>
        
        <strong>Install Fennel node:</strong><br>
        <code>helm install fennel-node fennel/fennel-node</code>
    </div>
    
    <h2>Available Charts</h2>
    <div class="chart-list">
        <ul>
            <li><strong>fennel-node</strong> - Fennel blockchain node deployment</li>
        </ul>
    </div>
    
    <h2>Repository Files</h2>
    <ul>
        <li><a href="charts/">charts/</a> - Chart packages and index</li>
        <li><a href="charts/index.yaml">charts/index.yaml</a> - Helm repository index</li>
    </ul>
    
    <hr>
    <p><small>Generated by fix-gh-pages.sh</small></p>
</body>
</html>
EOF
    
    # Create README
    cat > README.md << EOF
# Fennel Node Helm Repository

This is the Helm repository for Fennel blockchain node charts.

## Usage

\`\`\`bash
# Add the repository
helm repo add fennel https://corruptedaesthetic.github.io/fennel-solonet

# Update repositories
helm repo update

# Install Fennel node
helm install fennel-node fennel/fennel-node
\`\`\`

## Available Charts

- **fennel-node** - Fennel blockchain node deployment chart

## Chart Version: $CHART_VERSION

Generated by fix-gh-pages.sh script.
EOF
    
    # Add all files
    git add .
    
    # Create initial commit
    git commit -m "üöÄ Initialize Helm repository for fennel-node

- Added fennel-node chart version $CHART_VERSION
- Created repository index and documentation
- Generated: $(date -u +'%Y-%m-%d %H:%M:%S UTC')"
    
    # Add remote (assuming we're in the fennel-solonet repository)
    git remote add origin "$(cd "$OLDPWD" && git remote get-url origin)"
    
    # Push to gh-pages branch
    log "Pushing to gh-pages branch..."
    git push origin HEAD:gh-pages --force
    
    log "‚úÖ GitHub Pages branch created successfully!"
    
    # Cleanup and return to original directory
    cd "$OLDPWD"
    rm -rf "$TEMP_DIR"
    
    log "üìã Next steps:"
    echo "1. Go to https://github.com/$(git remote get-url origin | sed 's/.*github.com[:/]\([^.]*\).*/\1/')/settings/pages"
    echo "2. Set source to 'Deploy from a branch'"
    echo "3. Select 'gh-pages' branch and '/ (root)' folder"
    echo "4. Wait a few minutes for deployment"
    echo "5. Access your Helm repository at: https://corruptedaesthetic.github.io/fennel-solonet"
}

# Function to test the repository
test_repository() {
    log "Testing Helm repository..."
    
    # Test if the repository is accessible
    REPO_URL="https://corruptedaesthetic.github.io/fennel-solonet"
    
    echo "Testing repository accessibility..."
    if curl -f -s "$REPO_URL" > /dev/null; then
        log "‚úÖ Repository is accessible at $REPO_URL"
    else
        warn "‚ö†Ô∏è  Repository may not be accessible yet (GitHub Pages can take a few minutes to deploy)"
    fi
    
    # Test Helm repository functionality
    echo "Testing Helm repository functionality..."
    helm repo add fennel-test "$REPO_URL" --force-update 2>/dev/null || true
    
    if helm search repo fennel-test/fennel-node 2>/dev/null; then
        log "‚úÖ Helm repository is working correctly!"
        helm repo remove fennel-test 2>/dev/null || true
    else
        warn "‚ö†Ô∏è  Helm repository may not be ready yet"
    fi
}

# Main execution
main() {
    case "${1:-fix}" in
        "cleanup")
            cleanup_gh_pages
            ;;
        "create")
            create_gh_pages
            ;;
        "test")
            test_repository
            ;;
        "fix"|*)
            log "üîß Running complete GitHub Pages fix..."
            cleanup_gh_pages
            create_gh_pages
            echo
            log "üåê GitHub Pages setup completed!"
            echo
            warn "‚ö†Ô∏è  Important: You still need to enable GitHub Pages in your repository settings:"
            echo "   1. Go to: https://github.com/$(git remote get-url origin | sed 's/.*github.com[:/]\([^.]*\).*/\1/')/settings/pages"
            echo "   2. Set source to 'Deploy from a branch'"
            echo "   3. Select 'gh-pages' branch and '/ (root)' folder"
            echo "   4. Save the settings"
            echo
            log "After enabling, test with: ./scripts/fix-gh-pages.sh test"
            ;;
    esac
}

# Handle script arguments
main "$@" 