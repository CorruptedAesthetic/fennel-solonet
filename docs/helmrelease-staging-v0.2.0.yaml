---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: fennel-staging
  namespace: fennel-staging
spec:
  interval: 5m
  chart:
    spec:
      chart: fennel-node
      version: "0.2.0"  # Updated from 0.1.3
      sourceRef:
        kind: HelmRepository
        name: fennel-charts
        namespace: flux-system
  values:
    # Image configuration - will be updated by CI/CD
    image:
      repository: ghcr.io/corruptedaesthetic/fennel-solonet
      tag: "sha-a7f75e3456660ffce6f32ae1ab33a11c6f2ae91f"  # Keep existing tag
      pullPolicy: Always
    
    # Chainspec configuration
    chainspec:
      file: "staging.json"
    
    # Configure the Parity node subchart (v5.15.0)
    node:
      enabled: true
      
      # Override the image settings
      image:
        repository: ghcr.io/corruptedaesthetic/fennel-solonet
        tag: "sha-a7f75e3456660ffce6f32ae1ab33a11c6f2ae91f"  # Keep existing tag
        pullPolicy: Always
      
      # Node configuration (new structure for v5.15.0)
      node:
        chain: "fennel"
        command: "fennel-node"
        replicas: 1
        role: "authority"
        
        # Custom chainspec from ConfigMap
        customChainspec: true
        customChainspecPath: "/chainspec/staging.json"
        
        # Storage configuration with local-path
        chainData:
          storageClass: "local-path"  # Fixed path for new chart
          volumeSize: "100Gi"
          pruning: 1000  # Keep last 1000 blocks
          
        chainKeystore:
          storageClass: "local-path"
          volumeSize: "10Mi"
          mountInMemory:
            enabled: false  # For staging, use persistent storage
        
        # Node key from secret
        existingNodeKeySecret:
          enabled: true
          secretName: "node-key"
          key: "node.key"
        
        # Validator keys
        keys:
          - secretName: "validator-keys"
            mountPath: "/keys"
        
        # Flags
        flags:
          - "--prometheus-external"
          - "--rpc-external"
          - "--ws-external"
          - "--rpc-cors=all"
          - "--rpc-methods=unsafe"
          - "--log=info"
          - "--enable-offchain-indexing=true"
        
        # Services configuration
        perNodeServices:
          apiService:
            enabled: true
            type: ClusterIP
            annotations: {}
          p2pService:
            enabled: true
            type: NodePort
            nodePort: 30333
            annotations: {}
        
        # Prometheus configuration
        prometheus:
          enabled: true
          port: 9615
      
      # Pod security context
      podSecurityContext:
        runAsUser: 1000
        runAsGroup: 1000
        fsGroup: 1000
        runAsNonRoot: true
        seccompProfile:
          type: RuntimeDefault
      
      # Container security context
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          drop:
            - ALL
        readOnlyRootFilesystem: false
        runAsNonRoot: true
        runAsUser: 1000
        runAsGroup: 1000
      
      # Service account
      serviceAccount:
        create: true
        annotations:
          app.kubernetes.io/component: "blockchain-node"
          app.kubernetes.io/managed-by: "flux"
      
      # Resources
      resources:
        requests:
          cpu: 500m
          memory: 512Mi
        limits:
          cpu: 1
          memory: 1Gi
      
      # Additional volumes for chainspec
      extraVolumes:
        - name: chainspec
          configMap:
            name: "fennel-chainspec"
      
      extraVolumeMounts:
        - name: chainspec
          mountPath: /chainspec
          readOnly: true
      
      # Init containers
      initContainers:
        # Service info retrieval (critical for P2P)
        - name: retrieve-service-info
          image: paritytech/kubetools-kubectl:latest
          imagePullPolicy: IfNotPresent
          command: ["/scripts/retrieve-service-info.sh"]
          volumeMounts:
            - name: service-info
              mountPath: /tmp
          resources:
            requests:
              cpu: 100m
              memory: 128Mi
            limits:
              cpu: 200m
              memory: 256Mi
      
      # Service monitor for Prometheus
      serviceMonitor:
        enabled: true
        interval: "30s"
        scrapeTimeout: "10s"
      
      # Pod disruption budget
      podDisruptionBudget:
        enabled: true
        minAvailable: 1
      
      # Additional labels
      extraLabels:
        environment: staging
        app.kubernetes.io/instance: fennel-staging
        app.kubernetes.io/version: "0.2.0"
        app.kubernetes.io/component: "blockchain-node"
        app.kubernetes.io/part-of: "fennel-network"
      
      # Pod annotations
      podAnnotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "9615"
        prometheus.io/path: "/metrics"
        deployment.kubernetes.io/revision: "1"
        config.linkerd.io/skip-inbound-ports: "30333"
      
      # Environment variables
      extraEnvVars:
        - name: RUST_LOG
          value: "info"
        - name: RUST_BACKTRACE
          value: "1"
      
      # Termination grace period
      terminationGracePeriodSeconds: 60
      
      # Enable startup probe
      enableStartupProbe: true
      
  # Health checks and rollback configuration
  upgrade:
    remediation:
      retries: 3
      remediateLastFailure: true
    cleanupOnFail: true
    crds: CreateReplace
  rollback:
    cleanupOnFail: true
    force: false
    recreate: false
    timeout: 5m
  
  # Install configuration
  install:
    remediation:
      retries: 3
    crds: CreateReplace
    timeout: 10m 